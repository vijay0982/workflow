@model WorkflowProcess.ViewModels.SubMenuMasterCreate

@{
    Layout = "~/Views/Shared/_LayoutSuperAdmin.cshtml";
}




@using (Html.BeginForm("Create", "SubMenuMaster"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SubMenuMaster</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.MenuId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.MenuId, new SelectList(Model.MenuList, "MenuId", "MenuName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MenuId, "", new { @class = "text-danger" })
               
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ControllerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ControllerName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ControllerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionMethod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ActionMethod, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActionMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubMenuName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SubMenuName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubMenuName, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Status, new { @checked = "checked" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSubmit").click(function (e) {
            if ($("#MenuId").val() == null || $("#MenuId").val() == "-1") {
                $("[data-valmsg-for='MenuId']").text("Select Menu");
                e.preventDefault();
            } else {
                $("[data-valmsg-for='MenuId']").text("");
            }
        });
    });
</script>

<script src="~/Scripts/ValidationScript/submenu.validate.js"></script>