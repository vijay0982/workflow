@model WorkflowProcess.ViewModels.CreateUserViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutSuperAdmin.cshtml";
}



<h4 class="page-header">Create User</h4>
<div class="panel panel-default">
    <div class="panel-heading">Create User</div>
    <div class="panel-body">
        @if (TempData["MessageCreateUsers"] != null)
            {
            <div class="alert alert-danger alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Message!</strong> @TempData["MessageCreateUsers"]
            </div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecchar(event);" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                @*<div class="col-lg-4">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>*@
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", @maxlength = 50 })
                    @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="clearfix"></div>
                <div class="col-lg-6" style="margin-top:20px;">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.RadioButtonFor(model => model.Gender, "M") @Html.Label("", "Male")
                    @Html.RadioButtonFor(model => model.Gender, "F") @Html.Label("", "Female")
                    <br />
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
                @*<div class="col-lg-4">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", @maxlength = 10 })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>*@
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @maxlength = 20, @onkeypress = "return onlyspecchar(event);" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @maxlength = 30, @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-6">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="row">
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.ListRole, "RoleId", "RoleName"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>*@
            <br />
            <div class="row">
                <div class="col-lg-6">
                    <input type="submit" value="Create User" class="btn btn-success" />
                    @Html.ActionLink("Clear", "Create", "CreateUsers", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        }
    </div>
</div>
